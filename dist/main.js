(()=>{var e={8933:e=>{"use strict";e.exports=require("electron")},5622:e=>{"use strict";e.exports=require("path")}},o={};function n(t){if(o[t])return o[t].exports;var i=o[t]={exports:{}};return e[t](i,i.exports,n),i.exports}(()=>{const{app:e,BrowserWindow:o,ipcMain:t,dialog:i,Menu:s,shell:r}=n(8933);let l;n(5622),global.__static=n(5622).join(__dirname,"/public").replace(/\\/g,"\\\\"),console.log(global.__static);const a=`file://${__dirname}/dist/index.html`;function c(){l=new o({icon:"./public/icons/icon-48.ico",nodeIntegration:!1,webSecurity:!1,width:1e3,height:563,useContentSize:!0,webPreferences:{nodeIntegration:!0},show:!1}),l.loadURL(a),l.on("closed",(()=>{l=null})),l.once("ready-to-show",(()=>{l.show()}))}e.on("ready",c),e.on("window-all-closed",(()=>{"darwin"!==process.platform&&e.quit()})),e.on("activate",(()=>{null===l&&c()})),e.name="i18n-tools",t.on("show-context-menu",(e=>{})),t.on("save-dialog",((e,o)=>{let n="未命名.json";o&&(n=o);let t={title:"导出语言包",defaultPath:n,properties:["openFile","openDirectory"],filters:[{name:"All files",extensions:["js","json","ts"]}]};i.showSaveDialog(t).then((o=>{e.sender.send("save-file",o)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlbGVjdHJvblwiIiwid2VicGFjazovLy9leHRlcm5hbCBcInBhdGhcIiIsIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbWFpbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJhcHAiLCJCcm93c2VyV2luZG93IiwiaXBjTWFpbiIsImRpYWxvZyIsIk1lbnUiLCJzaGVsbCIsIm1haW5XaW5kb3ciLCJnbG9iYWwiLCJfX3N0YXRpYyIsIl9fZGlybmFtZSIsInJlcGxhY2UiLCJjb25zb2xlIiwibG9nIiwid2luVVJMIiwiY3JlYXRlV2luZG93IiwiaWNvbiIsIm5vZGVJbnRlZ3JhdGlvbiIsIndlYlNlY3VyaXR5Iiwid2lkdGgiLCJoZWlnaHQiLCJ1c2VDb250ZW50U2l6ZSIsIndlYlByZWZlcmVuY2VzIiwic2hvdyIsImxvYWRVUkwiLCJvbiIsIm9uY2UiLCJwcm9jZXNzIiwicGxhdGZvcm0iLCJxdWl0IiwibmFtZSIsImV2IiwiZXZlbnQiLCJhcmciLCJmaWxlbmFtZSIsInNhdmVPcHRpb25zIiwidGl0bGUiLCJkZWZhdWx0UGF0aCIsInByb3BlcnRpZXMiLCJmaWx0ZXJzIiwiZXh0ZW5zaW9ucyIsInNob3dTYXZlRGlhbG9nIiwidGhlbiIsInBhdGgiLCJzZW5kZXIiLCJzZW5kIl0sIm1hcHBpbmdzIjoibUNBQUFBLEVBQU9DLFFBQVVDLFFBQVEsYSxzQkNBekJGLEVBQU9DLFFBQVVDLFFBQVEsVUNDckJDLEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixHQUFHRixFQUF5QkUsR0FDM0IsT0FBT0YsRUFBeUJFLEdBQVVKLFFBRzNDLElBQUlELEVBQVNHLEVBQXlCRSxHQUFZLENBR2pESixRQUFTLElBT1YsT0FIQUssRUFBb0JELEdBQVVMLEVBQVFBLEVBQU9DLFFBQVNHLEdBRy9DSixFQUFPQyxRLE1DcEJmLE1BQU0sSUFBR00sRUFBRyxjQUFFQyxFQUFhLFFBQUVDLEVBQU8sT0FBRUMsRUFBTSxLQUFDQyxFQUFJLE1BQUNDLEdBQVUsRUFBUSxNQVFwRSxJQUFJQyxFQVBTLEVBQVEsTUFHbkJDLE9BQU9DLFNBQVcsYUFBcUJDLFVBQVcsV0FBV0MsUUFBUSxNQUFPLFFBQzVFQyxRQUFRQyxJQUFJTCxPQUFPQyxVQUlyQixNQUFNSyxFQUVGLFVBQVVKLDRCQUVkLFNBQVNLLElBQ1BSLEVBQWEsSUFBSUwsRUFBYyxDQUM3QmMsS0FBTSw2QkFDTkMsaUJBQWlCLEVBQ2pCQyxhQUFhLEVBQ2JDLE1BQU8sSUFDUEMsT0FBUSxJQUNSQyxnQkFBZ0IsRUFDaEJDLGVBQWdCLENBQ2RMLGlCQUFpQixHQUVuQk0sTUFBSyxJQVNQaEIsRUFBV2lCLFFBQVFWLEdBQ25CUCxFQUFXa0IsR0FBRyxVQUFVLEtBQ3RCbEIsRUFBYSxRQUVmQSxFQUFXbUIsS0FBSyxpQkFBaUIsS0FDL0JuQixFQUFXZ0IsVUFJZnRCLEVBQUl3QixHQUFHLFFBQVNWLEdBQ2hCZCxFQUFJd0IsR0FBRyxxQkFBcUIsS0FDRCxXQUFyQkUsUUFBUUMsVUFDVjNCLEVBQUk0QixVQUlSNUIsRUFBSXdCLEdBQUcsWUFBWSxLQUNFLE9BQWZsQixHQUNGUSxPQUlKZCxFQUFJNkIsS0FBTyxhQXFDWDNCLEVBQVFzQixHQUFHLHFCQUFxQk0sUUFVaEM1QixFQUFRc0IsR0FBRyxlQUFlLENBQUNPLEVBQU1DLEtBQy9CLElBQUlDLEVBQVcsV0FDWkQsSUFDREMsRUFBV0QsR0FFYixJQUFJRSxFQUFjLENBQ2hCQyxNQUFNLFFBQ05DLFlBQVlILEVBQ1pJLFdBQVcsQ0FBQyxXQUFXLGlCQUN2QkMsUUFBUSxDQUNOLENBQUNULEtBQUssWUFBWVUsV0FBVyxDQUFDLEtBQUssT0FBTyxTQUc5Q3BDLEVBQU9xQyxlQUFlTixHQUFhTyxNQUFLQyxJQUN0Q1gsRUFBTVksT0FBT0MsS0FBSyxZQUFhRixVIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVjdHJvblwiKTs7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicGF0aFwiKTs7IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0aWYoX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSkge1xuXHRcdHJldHVybiBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCJjb25zdCB7ICBhcHAsIEJyb3dzZXJXaW5kb3csIGlwY01haW4sIGRpYWxvZyxNZW51LHNoZWxsIH0gPSByZXF1aXJlKCdlbGVjdHJvbicpXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCcpIHtcbiAgZ2xvYmFsLl9fc3RhdGljID0gcmVxdWlyZSgncGF0aCcpLmpvaW4oX19kaXJuYW1lLCAnL3B1YmxpYycpLnJlcGxhY2UoL1xcXFwvZywgJ1xcXFxcXFxcJylcbiAgY29uc29sZS5sb2coZ2xvYmFsLl9fc3RhdGljKVxufVxuXG5sZXQgbWFpbldpbmRvd1xuY29uc3Qgd2luVVJMID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCdcbiAgPyBgaHR0cDovL2xvY2FsaG9zdDo5MDYwYFxuICA6IGBmaWxlOi8vJHtfX2Rpcm5hbWV9L2Rpc3QvaW5kZXguaHRtbGBcblxuZnVuY3Rpb24gY3JlYXRlV2luZG93ICgpIHtcbiAgbWFpbldpbmRvdyA9IG5ldyBCcm93c2VyV2luZG93KHtcbiAgICBpY29uOiAnLi9wdWJsaWMvaWNvbnMvaWNvbi00OC5pY28nLFxuICAgIG5vZGVJbnRlZ3JhdGlvbjogZmFsc2UsXG4gICAgd2ViU2VjdXJpdHk6IGZhbHNlLFxuICAgIHdpZHRoOiAxMDAwLFxuICAgIGhlaWdodDogNTYzLFxuICAgIHVzZUNvbnRlbnRTaXplOiB0cnVlLFxuICAgIHdlYlByZWZlcmVuY2VzOiB7XG4gICAgICBub2RlSW50ZWdyYXRpb246IHRydWVcbiAgICB9LFxuICAgIHNob3c6ZmFsc2UsXG4gICAgLy8gdGhpY2tGcmFtZTpmYWxzZSxcbiAgICAvLyBvcGFjaXR5OjAuOTksXG4gICAgLy8gdHJhbnNwYXJlbnQ6dHJ1ZSxcbiAgICAvLyB0aXRsZUJhclN0eWxlOidoaWRkZW4nLFxuICAgIC8vIHRpdGxlQmFyU3R5bGU6ICdoaWRkZW5JbnNldCdcbiAgICAvLyBmcmFtZTogdHJ1ZSwgLy8g5Y676Zmk6buY6K6k56qX5Y+j5qCPXG4gIH0pXG5cbiAgbWFpbldpbmRvdy5sb2FkVVJMKHdpblVSTClcbiAgbWFpbldpbmRvdy5vbignY2xvc2VkJywgKCkgPT4ge1xuICAgIG1haW5XaW5kb3cgPSBudWxsXG4gIH0pXG4gIG1haW5XaW5kb3cub25jZSgncmVhZHktdG8tc2hvdycsICgpID0+IHtcbiAgICBtYWluV2luZG93LnNob3coKVxuICB9KVxufVxuXG5hcHAub24oJ3JlYWR5JywgY3JlYXRlV2luZG93KVxuYXBwLm9uKCd3aW5kb3ctYWxsLWNsb3NlZCcsICgpID0+IHtcbiAgaWYgKHByb2Nlc3MucGxhdGZvcm0gIT09ICdkYXJ3aW4nKSB7XG4gICAgYXBwLnF1aXQoKVxuICB9XG59KVxuXG5hcHAub24oJ2FjdGl2YXRlJywgKCkgPT4ge1xuICBpZiAobWFpbldpbmRvdyA9PT0gbnVsbCkge1xuICAgIGNyZWF0ZVdpbmRvdygpXG4gIH1cbn0pXG5cbmFwcC5uYW1lID0gJ2kxOG4tdG9vbHMnO1xuY29uc3QgdGVtcGxhdGUgPSBbXG4gIHtcbiAgICBsYWJlbDon5Yi35pawJyxcbiAgICBjbGljazphc3luYygpPT57XG4gICAgICBtYWluV2luZG93LnJlbG9hZCgpXG4gICAgfVxuICB9LFxuICB7XG4gICAgbGFiZWw6ICflhbPkuo4nLFxuICAgIGNsaWNrOmFzeW5jKCk9PntcbiAgICAgIGxldCBhYm91dE1lID0gIG5ldyBCcm93c2VyV2luZG93KHtcbiAgICAgICAgaWNvbjogJy4vcHVibGljL2ljb25zL2ljb24tNDguaWNvJyxcbiAgICAgICAgbm9kZUludGVncmF0aW9uOiBmYWxzZSxcbiAgICAgICAgd2ViU2VjdXJpdHk6IGZhbHNlLFxuICAgICAgICB3aWR0aDogNTgwLFxuICAgICAgICBoZWlnaHQ6IDM3MCxcbiAgICAgICAgdXNlQ29udGVudFNpemU6IHRydWUsXG4gICAgICAgIGNvbnRleHRJc29sYXRpb246ZmFsc2UsXG4gICAgICAgIHdlYlByZWZlcmVuY2VzOiB7XG4gICAgICAgICAgbm9kZUludGVncmF0aW9uOiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBza2lwVGFza2Jhcjp0cnVlLFxuICAgICAgICBhdXRvSGlkZU1lbnVCYXI6dHJ1ZSxcbiAgICAgIH0pXG4gICAgICBhYm91dE1lLmxvYWRGaWxlKGdsb2JhbC5fX3N0YXRpYytcIi9hYm91dC5odG1sXCIpXG4gICAgfVxuICB9XG5dXG5cbi8vIGNvbnN0IG1lbnUgPSBNZW51LmJ1aWxkRnJvbVRlbXBsYXRlKHRlbXBsYXRlKVxuLy8gTWVudS5zZXRBcHBsaWNhdGlvbk1lbnUobWVudSlcbi8vIGFwcC5vbignYnJvd3Nlci13aW5kb3ctY3JlYXRlZCcsKGV2LHdpbik9Pntcbi8vICAgd2luLndlYkNvbnRlbnRzLm9uKCdjb250ZXh0LW1lbnUnLChldixwYXJhbXMpPT57XG4vLyAgICAgbWVudS5wb3B1cCh3aW4scGFyYW1zLngscGFyYW1zLnkpXG4vLyAgIH0pXG4vLyB9KVxuaXBjTWFpbi5vbignc2hvdy1jb250ZXh0LW1lbnUnLChldik9PntcbiAgLy9jb25zdCB3aW4gPSBCcm93c2VyV2luZG93LmZyb21XZWJDb250ZW50cyhldmVudC5zZW5kZXIpXG4gIC8vbWVudS5wb3B1cCh3aW4pXG59KVxuLy8g55uR5ZCsYXN5bmNocm9ub3VzLW1lc3NhZ2XvvIzmjqXmlLbmuLLmn5Pov5vnqIvlj5HpgIHnmoTmtojmga9cbi8vIGlwY01haW4ub24oJ2FzeW5jaHJvbm91cy1tZXNzYWdlJywgKGV2ZW50LCBhcmcpID0+IHtcbi8vICAgY29uc29sZS5sb2coYXJnKSAvLyBwcmludHMgXCJwaW5nXCJcbi8vICAgLy8g5Zue5aSN5raI5oGvXG4vLyAgIGV2ZW50LnNlbmRlci5zZW5kKCdhc3luY2hyb25vdXMtcmVwbHknLCAnYXN5bi1wb25nJylcbi8vIH0pXG5pcGNNYWluLm9uKCdzYXZlLWRpYWxvZycsIChldmVudCxhcmcpID0+IHtcbiAgbGV0IGZpbGVuYW1lID0gJ+acquWRveWQjS5qc29uJztcbiAgaWYoYXJnKXtcbiAgICBmaWxlbmFtZSA9IGFyZ1xuICB9XG4gIGxldCBzYXZlT3B0aW9ucyA9IHtcbiAgICB0aXRsZTon5a+85Ye66K+t6KiA5YyFJyxcbiAgICBkZWZhdWx0UGF0aDpmaWxlbmFtZSxcbiAgICBwcm9wZXJ0aWVzOlsnb3BlbkZpbGUnLCdvcGVuRGlyZWN0b3J5J10sXG4gICAgZmlsdGVyczpbXG4gICAgICB7bmFtZTonQWxsIGZpbGVzJyxleHRlbnNpb25zOltcImpzXCIsXCJqc29uXCIsXCJ0c1wiXX1cbiAgICBdXG4gIH1cbiAgZGlhbG9nLnNob3dTYXZlRGlhbG9nKHNhdmVPcHRpb25zKS50aGVuKHBhdGg9PntcbiAgICBldmVudC5zZW5kZXIuc2VuZCgnc2F2ZS1maWxlJywgcGF0aClcbiAgfSlcbn0pIl0sInNvdXJjZVJvb3QiOiIifQ==